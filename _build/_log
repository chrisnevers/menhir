### Starting build.
# Target: src/main.ml.depends, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:src/main.ml, include, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -modules src/main.ml > src/main.ml.depends # cached
# Target: src/lexer.mll, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mll, file:src/lexer.mll, include, lexer, ocaml, ocamllex, quiet, short_paths, thread, traverse }
ocamllex.opt -q src/lexer.mll # cached
# Target: src/lexer.ml.depends, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:src/lexer.ml, include, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -modules src/lexer.ml > src/lexer.ml.depends # cached
# Target: src/parser.mly.depends, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mly, file:src/parser.mly, include, infer, menhir_ocamldep, ocaml, ocamldep, quiet, short_paths, thread, traverse }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' src/parser.mly > src/parser.mly.depends # cached
# Target: src/rprogram.ml.depends, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:src/rprogram.ml, include, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -modules src/rprogram.ml > src/rprogram.ml.depends # cached
# Target: src/rprogram.cmo, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/rprogram.cmo, file:src/rprogram.ml, implem, include, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -I src -o src/rprogram.cmo src/rprogram.ml # cached
# Target: src/parser.mly, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:ml, extension:mly, file:src/parser.ml, file:src/parser.mly, include, infer, menhir, ocaml, parser, quiet, short_paths, thread, traverse }
menhir --ocamlc 'ocamlfind ocamlc -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package ppx_sexp_conv -package core -ppx '\''ppx-jane -as-ppx'\'' -I src' --infer src/parser.mly # cached
# Target: src/parser.mli.depends, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mli, file:src/parser.mli, include, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -modules src/parser.mli > src/parser.mli.depends # cached
# Target: src/parser.cmi, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:mli, file:src/parser.mli, include, interf, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -I src -o src/parser.cmi src/parser.mli # cached
# Target: src/lexer.cmo, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/lexer.cmo, file:src/lexer.ml, implem, include, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -I src -o src/lexer.cmo src/lexer.ml # cached
# Target: src/main.cmo, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:src/main.cmo, file:src/main.ml, implem, include, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -I src -o src/main.cmo src/main.ml # cached
# Target: src/parser.ml.depends, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:src/parser.ml, include, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -modules src/parser.ml > src/parser.ml.depends # cached
# Target: src/rprogram.cmx, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:src/rprogram.cmx, file:src/rprogram.ml, implem, include, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -I src -o src/rprogram.cmx src/rprogram.ml # cached
# Target: src/parser.cmx, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:src/parser.cmx, file:src/parser.ml, implem, include, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -I src -o src/parser.cmx src/parser.ml # cached
# Target: src/lexer.cmx, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:src/lexer.cmx, file:src/lexer.ml, implem, include, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -I src -o src/lexer.cmx src/lexer.ml # cached
# Target: src/main.cmx, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:src/main.cmx, file:src/main.ml, implem, include, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package ppx_sexp_conv -package core -ppx 'ppx-jane -as-ppx' -I src -o src/main.cmx src/main.ml # cached
# Target: src/main.native, tags: { package(core), package(ppx_sexp_conv), ppx(ppx-jane -as-ppx), bin_annot, debug, dont_link_with, extension:native, file:src/main.native, include, link, native, ocaml, program, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -linkpkg -g -thread -package ppx_sexp_conv -package core -I src src/rprogram.cmx src/parser.cmx src/lexer.cmx src/main.cmx -o src/main.native # cached
# Compilation successful.
